#TO BE IMPLEMENTED:
        #-Copy printed output to a debug file
        #-Menu for tracker selection (separate window?)
        #-Estimated time to completion    #Needs more datar

    #2.0.0
        #rawFileReader updated for compatibility with new PPA firmware
        #Script can now output POSIXTIME as well as DATETIME
        #Fixed bug where last header didn't get the "_RAMPNo." suffix"
        #Objects representing data files moved to their own .py file
        #Error trackers relocated to their own file
        #Helper functions moved to their own file
        #Script now tracks separate aux,active, and net values for echem sensors
        #bounds.ini expanded to reduce amount of hard-coded information
            #importing routines of bounds.ini changed accordingly
        #Trackers now run on POSIXTIME instead of DATETIME. Should improve performance
        #ddtTracker switched to rolling averages rather than discrete
            #Performance improved
        #Switched worker input from list to struct for greater flexibility
        #Parameters for error trackers now loaded once instead of every time they are initialized
        #Fixed issue where individual PPA channels were not being flagged
        #Changed Auto Checks to store one file per RAMP-day (similar to cal files)
            #Removed option to process by file. All multiprocess is process by file now.
        #Fixed bug occurring for s120 on 2018-2-23/24 (NoneType & datetime.timedelta comparison)
        #Fixed bug causing file concatenation to crash (due to temp files being deleted)
	#Fixed crash-causing bug caused by concatenating partial files without valid time stamps

        #_____TO DO____:
        #-Add compatibility with new RAMPs
	#-Make RDCauto portable via class
		#-Put global vars into a struct
		#-Ensure appropriate packages are imported
		#-Roll everything into a single class
	#-Don't lose shit if no sensor mix entry
        #-Bug: crashes when no ECHEM output
        #-Fix bug that causes crash when auto checks are disabled
	#-Bug: No valid files found if S177 instead of s177
	#-Overwrite files toggle?
        #-Processor speed input when Log Performance is turned on?
        #-Disable unnecessary trackers for Auto Remove
        #-Improve prediction of expected data yield?
        #-Parallellize file searching
        #-Revise bounds.ini file
        #-Change multiprocessing from pool to queue?

    #0.1.1 2018-8-31
        #BCM information can now be parsed in
        #Reading functions are now in a separate file for better organization
        #Criteria for NO DATA flag changed, now looks at data yield/sampling period
        #Tracker-specific constants will now override general constants
        #Fixed bug in flatline detection (flatlines not reported)
        #Fixed bug in file writing (crash when parameter defined, is parsed, but not in order)
        #.py file runs from the source folder, .exe/.app files run from working directory
        #Modified working directory when running .app file under MacOS

    #v0.1.0 2018-8-8
        #Renamed to Data Cleaner (big change, I know)
        #Defaults are now read from ini file, rather than hard-coded
        #Execution parameters now stored in a self-contained class
        #Added option to process all files stored in a given directory
        #Code will read multiple ramp folders in the same directory
        #Code will automatically look for SD and server files
        #MLRs removed        #Difference between using no MLR and blank MLR
        #Partial SD files will now be concatenated
        #Code can handle duplicate dates across multiple ramp directories
        #Utilizes multiple cores for faster processing
        #Options added regarding parallel allocation and number of processes
        #Added option to remove suspicious data
        #Error flags added to gap reports
        #Code can parse both old and new line formats of PPA
        #Automatically selects correct ECHEM labels
        #Tracks parameters that are not output to the cal file
        #Attempt to correct bad years(e.g. 2065-3-1 to 2017-3-1)
        #Differentiates between no sensors and no errors for sensors
        #Tracks if sensors are disconnected/connected
        #Option to hide ephemeral error flags
        #Pulls formerly hard-coded constants from an ini file
        #Optionally tracks code performance
        #Supporting files (constants,bounds,settings, etc.) moved to subdirectories
        #Script works independently of current working directory
        #Choose cal file outputs in defaults or via format file
        #Can now read plantower info from the prototype ramp
        #Checks that sensors are pushing values 
        #Script can be converted to application without losing functionality (as far as I know)
